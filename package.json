{
  "name": "coc-markdown-preview-enhanced",
  "version": "0.5.0",
  "description": "Markdown Preview Enhanced ported to coc.nvim",
  "author": "Weirong Xu <weirongxu.raidou@gmail.com>",
  "license": "University of Illinois/NCSA",
  "main": "lib/index.js",
  "repository": "git@github.com:weirongxu/coc-markdown-preview-enhanced.git",
  "homepage": "https://github.com/weirongxu/coc-markdown-preview-enhanced",
  "keywords": [
    "coc.nvim",
    "markdown",
    "preview",
    "markdown-preview",
    "markdown-preview-enhanced"
  ],
  "engines": {
    "coc": "^0.0.80"
  },
  "scripts": {
    "lint": "eslint src --ext ts",
    "clean": "rimraf lib",
    "watch": "node esbuild.js --watch",
    "build:pack": "node esbuild.js",
    "check:type": "tsc --noEmit",
    "build": "run-s check:type lint build:pack",
    "prepare": "run-s build"
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "all",
    "printWidth": 80,
    "semi": true
  },
  "devDependencies": {
    "@raidou/eslint-config-base": "^1.6.0",
    "@types/eslint": "^8.4.9",
    "@types/node": "^18.11.8",
    "@types/prettier": "^2.7.1",
    "@types/rimraf": "^3.0.2",
    "@types/uuid": "^8.3.4",
    "coc-helper": "^0.15.2",
    "coc-webview": "^0.12.0",
    "coc.nvim": "^0.0.83-next.9",
    "esbuild": "^0.16.14",
    "esbuild-plugin-alias": "^0.2.1",
    "eslint": "^8.26.0",
    "isbinaryfile": "^5.0.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.7.1",
    "rimraf": "^3.0.2",
    "typescript": "^4.8.4"
  },
  "dependencies": {
    "@shd101wyy/mume": "^0.7.3"
  },
  "activationEvents": [
    "onCommand:markdown-preview-enhanced.openPreview",
    "onCommand:markdown-preview-enhanced.openPreviewBackground",
    "onLanguage:markdown"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Markdown Preview Enhanced",
      "properties": {
        "markdown-preview-enhanced.configPath": {
          "description": "The configuration directory path. Leave it empty to use '~/.mume' as the config path. Please restart coc.nvim to take effect.",
          "default": "",
          "type": "string"
        },
        "markdown-preview-enhanced.usePandocParser": {
          "description": "Enable this option will render markdown by pandoc instead of markdown-it.",
          "default": false,
          "type": "boolean"
        },
        "markdown-preview-enhanced.breakOnSingleNewLine": {
          "description": "In Markdown, a single newline character doesn't cause a line break in the generated HTML. In GitHub Flavored Markdown, that is not true. Enable this config option to insert line breaks in rendered HTML for single newlines in Markdown source.",
          "default": false,
          "type": "boolean"
        },
        "markdown-preview-enhanced.scrollSync": {
          "description": "Automatic scroll sync. This is now partially supported.",
          "default": true,
          "type": "boolean"
        },
        "markdown-preview-enhanced.liveUpdate": {
          "description": "Re-render the preview as the contents of the source changes, without requiring the source buffer to be saved. If disabled, the preview is re-rendered only when the buffer is saved to disk.",
          "default": true,
          "type": "boolean"
        },
        "markdown-preview-enhanced.singlePreview": {
          "description": "Open Only One Preview.",
          "default": true,
          "type": "boolean"
        },
        "markdown-preview-enhanced.automaticallyShowPreviewOfMarkdownBeingEdited": {
          "description": "Automatically show preview of markdown being edited.",
          "default": false,
          "type": "boolean"
        },
        "markdown-preview-enhanced.enableTypographer": {
          "description": "Enable smartypants and other sweet transforms.",
          "default": false,
          "type": "boolean"
        },
        "markdown-preview-enhanced.mathRenderingOption": {
          "description": "Choose the Math expression rendering method here. You can also disable math rendering if you want by choosing 'None'.",
          "default": "KaTeX",
          "type": "string",
          "enum": [
            "KaTeX",
            "MathJax",
            "None"
          ]
        },
        "markdown-preview-enhanced.mathInlineDelimiters": {
          "description": "Use customized Math expression inline delimiters.",
          "default": [
            [
              "$",
              "$"
            ],
            [
              "\\(",
              "\\)"
            ]
          ],
          "type": "array"
        },
        "markdown-preview-enhanced.mathBlockDelimiters": {
          "description": "Use customized Math expression block delimiters.",
          "default": [
            [
              "$$",
              "$$"
            ],
            [
              "\\[",
              "\\]"
            ]
          ],
          "type": "array"
        },
        "markdown-preview-enhanced.mathRenderingOnlineService": {
          "description": "Choose the Math expression rendering method option for GFM markdown export (Save as Markdown).",
          "default": "https://latex.codecogs.com/gif.latex",
          "type": "string",
          "enum": [
            "https://latex.codecogs.com/gif.latex",
            "https://latex.codecogs.com/svg.latex",
            "https://latex.codecogs.com/png.latex"
          ]
        },
        "markdown-preview-enhanced.enableWikiLinkSyntax": {
          "description": "Enable Wiki Link syntax support. More information can be found at https://help.github.com/articles/adding-links-to-wikis/",
          "default": true,
          "type": "boolean"
        },
        "markdown-preview-enhanced.enableLinkify": {
          "description": "Enable or disable conversion of URL-like text to links in the markdown preview.",
          "default": true,
          "type": "boolean"
        },
        "markdown-preview-enhanced.useGitHubStylePipedLink": {
          "description": "If checked, we use GitHub style piped wiki links, i.e. [[linkText|wikiLink]]. Otherwise, we use [[wikiLink|linkText]] as the original Wikipedia style.",
          "default": true,
          "type": "boolean"
        },
        "markdown-preview-enhanced.wikiLinkFileExtension": {
          "description": "By default, the extension for wikilink is `.md`. For example: [[test]] will direct to file path `test.md`.",
          "default": ".md",
          "type": "string"
        },
        "markdown-preview-enhanced.enableEmojiSyntax": {
          "description": "Enable emoji & font-awesome plugin. This only works for markdown-it parser, but not pandoc parser.",
          "default": true,
          "type": "boolean"
        },
        "markdown-preview-enhanced.enableExtendedTableSyntax": {
          "description": "Enable extended table syntax to support merging table cells.",
          "default": false,
          "type": "boolean"
        },
        "markdown-preview-enhanced.enableCriticMarkupSyntax": {
          "description": "Enable CriticMarkup syntax. Only works with markdown-it parser. Please check http://criticmarkup.com/users-guide.php for more information.",
          "default": false,
          "type": "boolean"
        },
        "markdown-preview-enhanced.frontMatterRenderingOption": {
          "description": "Front matter rendering option",
          "type": "string",
          "enum": [
            "none",
            "table",
            "code block"
          ],
          "default": "none"
        },
        "markdown-preview-enhanced.mermaidTheme": {
          "description": "Mermaid theme, you can choose one from [\"mermaid.css\", \"mermaid.dark.css\", \"mermaid.forest.css\"]",
          "default": "default",
          "type": "string",
          "enum": [
            "default",
            "dark",
            "forest"
          ]
        },
        "markdown-preview-enhanced.codeBlockTheme": {
          "description": "Code block theme. If `auto.css` is chosen, then the code block theme that best matches the current preview theme will be picked.",
          "default": "auto.css",
          "type": "string",
          "enum": [
            "auto.css",
            "default.css",
            "atom-dark.css",
            "atom-light.css",
            "atom-material.css",
            "coy.css",
            "darcula.css",
            "dark.css",
            "funky.css",
            "github.css",
            "hopscotch.css",
            "monokai.css",
            "okaidia.css",
            "one-dark.css",
            "one-light.css",
            "pen-paper-coffee.css",
            "pojoaque.css",
            "solarized-dark.css",
            "solarized-light.css",
            "twilight.css",
            "vs.css",
            "vue.css",
            "xonokai.css"
          ]
        },
        "markdown-preview-enhanced.previewTheme": {
          "description": "Preview Theme",
          "default": "github-light.css",
          "type": "string",
          "enum": [
            "atom-dark.css",
            "atom-light.css",
            "atom-material.css",
            "github-dark.css",
            "github-light.css",
            "gothic.css",
            "medium.css",
            "monokai.css",
            "newsprint.css",
            "night.css",
            "none.css",
            "one-dark.css",
            "one-light.css",
            "solarized-dark.css",
            "solarized-light.css",
            "vue.css"
          ]
        },
        "markdown-preview-enhanced.revealjsTheme": {
          "description": "RevealJS Presentation Theme",
          "default": "white.css",
          "type": "string",
          "enum": [
            "beige.css",
            "black.css",
            "blood.css",
            "league.css",
            "moon.css",
            "night.css",
            "serif.css",
            "simple.css",
            "sky.css",
            "solarized.css",
            "white.css",
            "none.css"
          ]
        },
        "markdown-preview-enhanced.protocolsWhiteList": {
          "description": "Accepted protocols for links.",
          "default": "http://, https://, atom://, file://, mailto:, tel:",
          "type": "string"
        },
        "markdown-preview-enhanced.imageFolderPath": {
          "description": "When using Image Helper to copy images, by default images will be copied to root image folder path '/assets'",
          "default": "/assets",
          "type": "string"
        },
        "markdown-preview-enhanced.imageUploader": {
          "description": "You can choose different image uploader to upload image",
          "default": "imgur",
          "type": "string",
          "enum": [
            "imgur",
            "sm.ms",
            "qiniu"
          ]
        },
        "markdown-preview-enhanced.AccessKey": {
          "type": "string",
          "default": "",
          "description": "Qiniu AccessKey"
        },
        "markdown-preview-enhanced.SecretKey": {
          "type": "string",
          "default": "",
          "description": "Qiniu SecretKey"
        },
        "markdown-preview-enhanced.Bucket": {
          "type": "string",
          "default": "",
          "description": "Qiniu Bucket"
        },
        "markdown-preview-enhanced.Domain": {
          "type": "string",
          "default": "http://",
          "description": "Qiniu Domain"
        },
        "markdown-preview-enhanced.printBackground": {
          "description": "Whether to print background for file export or not. If set to `false`, then `github-light` preview theme will be used. You can also set `print_background` in front-matter for individual files.",
          "default": false,
          "type": "boolean"
        },
        "markdown-preview-enhanced.chromePath": {
          "description": "Chrome executable path, which is used for Puppeteer export. Leaving it empty means the path will be found automatically.",
          "default": "",
          "type": "string",
          "scope": "machine"
        },
        "markdown-preview-enhanced.imageMagickPath": {
          "description": "ImageMagick command line path. Should be either `magick` or `convert`. Leaving it empty means the path will be found automatically.",
          "default": "",
          "type": "string",
          "scope": "machine"
        },
        "markdown-preview-enhanced.pandocPath": {
          "description": "Pandoc executable path",
          "default": "pandoc",
          "type": "string",
          "scope": "machine"
        },
        "markdown-preview-enhanced.pandocMarkdownFlavor": {
          "description": "The pandoc markdown flavor you want",
          "default": "markdown-raw_tex+tex_math_single_backslash",
          "type": "string"
        },
        "markdown-preview-enhanced.pandocArguments": {
          "description": "Args passed to pandoc command e.g. [\"--smart\", \"--filter=/bin/exe\"] Please use long argument names.",
          "default": [],
          "type": "array"
        },
        "markdown-preview-enhanced.latexEngine": {
          "description": "Default latex engine for Pandoc export and latex code chunk.",
          "default": "pdflatex",
          "type": "string"
        },
        "markdown-preview-enhanced.enableScriptExecution": {
          "description": "Enables executing code chunks and importing javascript files.\n⚠️ Please use this feature with caution because it may put your security at risk! Your machine can get hacked if someone makes you open a markdown with malicious code while script execution is enabled.",
          "default": false,
          "type": "boolean"
        },
        "markdown-preview-enhanced.enableHTML5Embed": {
          "description": " Enables transform audio video link to to html5 embed audio video tags.",
          "default": false,
          "type": "boolean"
        },
        "markdown-preview-enhanced.HTML5EmbedUseImageSyntax": {
          "description": " Enables video/audio embed with ![]() syntax (default).",
          "default": true,
          "type": "boolean"
        },
        "markdown-preview-enhanced.HTML5EmbedUseLinkSyntax": {
          "description": "Enables video/audio embed with []() syntax.",
          "default": false,
          "type": "boolean"
        },
        "markdown-preview-enhanced.HTML5EmbedIsAllowedHttp": {
          "description": "When true embed media with http:// schema in URLs. When false ignore and don't embed them.",
          "default": false,
          "type": "boolean"
        },
        "markdown-preview-enhanced.HTML5EmbedAudioAttributes": {
          "description": "HTML attributes to pass to audio tags.",
          "default": "controls preload=\"metadata\" width=\"320\"",
          "type": "string"
        },
        "markdown-preview-enhanced.HTML5EmbedVideoAttributes": {
          "description": "HTML attributes to pass to video tags.",
          "default": "controls preload=\"metadata\" width=\"320\" height=\"240\"",
          "type": "string"
        },
        "markdown-preview-enhanced.puppeteerWaitForTimeout": {
          "description": "Puppeteer waits for a certain timeout in milliseconds before the document export.",
          "default": 0,
          "type": "number"
        },
        "markdown-preview-enhanced.usePuppeteerCore": {
          "description": "If set to true, then locally installed puppeteer-core will be required. Otherwise, the puppeteer globally installed by `npm install -g puppeteer` will be required.",
          "default": true,
          "type": "boolean"
        },
        "markdown-preview-enhanced.puppeteerArgs": {
          "description": "Args passed to puppeteer.launch({args: $puppeteerArgs})",
          "default": [],
          "type": "array"
        },
        "markdown-preview-enhanced.plantumlServer": {
          "description": "Render using PlantUML server instead of binary. Leave it empty to use the builtin plantuml.jar binary (`java` is required in system path). Eg: \"http://localhost:8080/svg/\"",
          "default": "",
          "type": "string"
        }
      }
    },
    "commands": [
      {
        "command": "markdown-preview-enhanced.openPreview",
        "title": "Markdown Preview Enhanced: Open Preview",
        "category": "Markdown"
      },
      {
        "command": "markdown-preview-enhanced.openPreviewBackground",
        "title": "Markdown Preview Enhanced: Open Preview but not openURL",
        "category": "Markdown"
      },
      {
        "command": "markdown-preview-enhanced.toggleScrollSync",
        "title": "Markdown Preview Enhanced: Toggle Scroll Sync"
      },
      {
        "command": "markdown-preview-enhanced.toggleLiveUpdate",
        "title": "Markdown Preview Enhanced: Toggle Live Update"
      },
      {
        "command": "markdown-preview-enhanced.toggleBreakOnSingleNewLine",
        "title": "Markdown Preview Enhanced: Toggle Break On Single New Line"
      },
      {
        "command": "markdown-preview-enhanced.openImageHelper",
        "title": "Markdown Preview Enhanced: Image Helper"
      },
      {
        "command": "markdown-preview-enhanced.runAllCodeChunks",
        "title": "Markdown Preview Enhanced: Run All Code Chunks"
      },
      {
        "command": "markdown-preview-enhanced.runCodeChunk",
        "title": "Markdown Preview Enhanced: Run Code Chunk"
      },
      {
        "command": "markdown-preview-enhanced.syncPreview",
        "title": "Markdown Preview Enhanced: Sync Preview"
      },
      {
        "command": "markdown-preview-enhanced.customizeCss",
        "title": "Markdown Preview Enhanced: Customize CSS"
      },
      {
        "command": "markdown-preview-enhanced.insertNewSlide",
        "title": "Markdown Preview Enhanced: Insert New Slide"
      },
      {
        "command": "markdown-preview-enhanced.insertTable",
        "title": "Markdown Preview Enhanced: Insert Table"
      },
      {
        "command": "markdown-preview-enhanced.insertPagebreak",
        "title": "Markdown Preview Enhanced: Insert Page Break"
      },
      {
        "command": "markdown-preview-enhanced.createTOC",
        "title": "Markdown Preview Enhanced: Create TOC"
      },
      {
        "command": "markdown-preview-enhanced.openMermaidConfig",
        "title": "Markdown Preview Enhanced: Open Mermaid Config"
      },
      {
        "command": "markdown-preview-enhanced.openMathJaxConfig",
        "title": "Markdown Preview Enhanced: Open MathJax Config"
      },
      {
        "command": "markdown-preview-enhanced.openKaTeXConfig",
        "title": "Markdown Preview Enhanced: Open KaTeX Config"
      },
      {
        "command": "markdown-preview-enhanced.extendParser",
        "title": "Markdown Preview Enhanced: Extend Parser"
      },
      {
        "command": "markdown-preview-enhanced.showUploadedImages",
        "title": "Markdown Preview Enhanced: Show Uploaded Images"
      }
    ]
  }
}
